plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.devqoo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring & JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // AWS
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.3.0")
    implementation 'io.awspring.cloud:spring-cloud-aws-s3'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'    // 메인 라이브러리
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'       // 코드 생성기(Apt, Annotation Processor Tool)
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api' // 메타모델 생성을 위한 JPA API
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'   // 일부 컴파일러에 필요

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
